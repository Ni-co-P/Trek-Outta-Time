var tag = document.createElement('script'); tag.src = 'https://www.youtube.com/iframe_api'; var firstScriptTag = document.getElementsByTagName('script')[0]; firstScriptTag.parentNode.insertBefore(tag, firstScriptTag); articles.forEach(article => { article.videoIds = article.videoIds.map(embedUrl => { const videoId = embedUrl.match(/embed\/([^/?]+)/)[1]; return videoId; }); }); const article = articles[0]; const videoId = article.videoIds[0]; var progressBar = document.getElementById('progress-bar'); var progressInterval; var isRepeatEnabled = false;
function onYouTubeIframeAPIReady() { player = new YT.Player('youtube-iframe-container', { height: '200', width: '200', videoId: videoId, playerVars: { loop: 0, autoplay: 0, controls: 0, showinfo: 0, rel: 0, modestbranding: 1 }, events: { 'onReady': onPlayerReady, 'onStateChange': onPlayerStateChange, 'onError': onPlayerError } }); }
function onPlayerReady(event) { onPlayerStateChange(event); var progressBarContainer = document.getElementById('progress-bar-container'); progressBarContainer.addEventListener('click', function(event) { var rect = progressBarContainer.getBoundingClientRect(); var totalWidth = rect.width; var offsetX = event.clientX - rect.left; var newTime = (offsetX / totalWidth) * player.getDuration(); player.seekTo(newTime); }); progressInterval = setInterval(updateProgressBar, 1000); repeatButton.addEventListener('click', function() { if (isRepeatEnabled) { isRepeatEnabled = false;repeatButton.textContent = 'repeat'; } else {isRepeatEnabled = true;repeatButton.textContent = 'repeat_one'; } }); }
let currentArticleIndex = 0; let currentVideoIndex = 0; let errorTimer; const errorContainer = document.getElementById('video-error'); const playPauseBtn = document.getElementById('playPauseBtn'); const muteBtn = document.getElementById('muteButton'); let isMuted = false;
function onPlayerError(event) { errorContainer.innerHTML = ''; const currentArticle = articles[currentArticleIndex]; const remainingVideos = currentArticle.videoIds.slice(currentVideoIndex + 1); if (remainingVideos.length > 0) { player.loadVideoById(remainingVideos[0]); currentVideoIndex++; } else { currentArticleIndex++; currentVideoIndex = 0; if (currentArticleIndex < articles.length) { player.loadVideoById(articles[currentArticleIndex].videoIds[0]); } else { currentArticleIndex = 0; let countdown = 10; currentVideoIndex = 0; player.loadVideoById(articles[0].videoIds[0]); } } }
function onPlayerStateChange(event) { errorContainer.innerHTML = ''; const playerState = event.data; updateArticleStates(playerState); if (event.data === YT.PlayerState.ENDED) { const currentArticle = articles[currentArticleIndex]; const nextArticleIndex = currentArticleIndex + 1; if (nextArticleIndex < articles.length) { currentArticleIndex = nextArticleIndex; } else { currentArticleIndex = 0; } currentVideoIndex = 0; const nextArticle = articles[currentArticleIndex]; player.loadVideoById(nextArticle.videoIds[currentVideoIndex]); } if (event.data === YT.PlayerState.PLAYING) { playPauseBtn.textContent = 'pause'; playPauseBtn.classList.remove('rotate-icon'); } else if (event.data === YT.PlayerState.CUED) { clearBlockquotes(); } else if (event.data === YT.PlayerState.PAUSED || event.data === YT.PlayerState.ENDED) { playPauseBtn.textContent = 'play_arrow'; playPauseBtn.classList.remove('rotate-icon'); } else if (event.data === YT.PlayerState.BUFFERING) { playPauseBtn.textContent = 'autorenew'; playPauseBtn.classList.add('rotate-icon'); } const currentArticle = articles[currentArticleIndex]; const articleElement = document.getElementById(`playButton${currentArticle.postId}`); const toggleButton = articleElement.querySelector(`[data-postid-toggle="${currentArticle.postId}"]`); if (toggleButton.classList.contains('toggle-off')) { const currentArticle = articles[currentArticleIndex]; const nextArticleIndex = currentArticleIndex + 1; if (nextArticleIndex < articles.length) { currentArticleIndex = nextArticleIndex; } else { currentArticleIndex = 0; } currentVideoIndex = 0; const nextArticle = articles[currentArticleIndex]; player.loadVideoById(nextArticle.videoIds[currentVideoIndex]); } }
function updateArticleStates(playerState) { const currentArticle = articles[currentArticleIndex]; articles.forEach((article, index) => { const articleElement = document.getElementById(`playButton${article.postId}`); const isCurrentArticle = article.postId === currentArticle.postId; if (isCurrentArticle) { if (playerState === -1) { articleElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'start' }); } const title = articleElement.querySelector('h3.post-title.entry-title').innerHTML; const author = articleElement.querySelector('h4.author-song').innerHTML; const pochette = articleElement.querySelector('.snippet-thumbnail img'); document.getElementById('video-author').innerHTML = author; document.getElementById('video-title').innerHTML = title; var videoImageDiv = document.getElementById('video-image'); if (pochette) { videoImageDiv.innerHTML = ''; var imgElement = document.createElement('img'); imgElement.src = pochette.src; videoImageDiv.appendChild(imgElement); } else { videoImageDiv.innerHTML = ''; videoImageDiv.classList.add('disc'); } articleElement.classList.add('highlight','post-pause'); if (playerState === YT.PlayerState.PLAYING) { articleElement.classList.add('post-play'); articleElement.classList.remove('post-pause', 'post-cued'); } else if (playerState === YT.PlayerState.PAUSED || playerState === YT.PlayerState.CUED || playerState === YT.PlayerState.BUFFERING) { articleElement.classList.add('post-pause'); articleElement.classList.remove('post-play', 'post-cued'); } } else { articleElement.classList.remove('highlight', 'post-play', 'post-pause', 'post-cued'); } });}
document.addEventListener('DOMContentLoaded', function() { const imgCurrentButtons = document.querySelectorAll('.imgcurrent'); imgCurrentButtons.forEach(button => { const articleId = button.closest('.post-outer-container').id.replace('playButton', ''); button.addEventListener('click', function() { const currentArticle = articles.find(article => article.postId === articleId); const videoIds = currentArticle.videoIds; let videoToPlay = null; currentVideoIndex = 0; videoIds.forEach(videoId => { if (!videoToPlay && player.getVideoData().video_id === videoId) { if (player.getPlayerState() === YT.PlayerState.PLAYING) { player.pauseVideo(); } else { player.playVideo(); } videoToPlay = videoId; } }); if (!videoToPlay) { currentArticleIndex = articles.findIndex(article => article.postId === articleId); videoToPlay = videoIds[0]; player.loadVideoById(videoToPlay); } }); }); const toggleButtons = document.querySelectorAll('.toggle-button'); toggleButtons.forEach((button, index) => { button.addEventListener('click', function() { const currentArticle = articles[index]; const isToggledOff = button.classList.contains('toggle-off'); if (isToggledOff) { button.classList.remove('toggle-off'); button.classList.add('toggle-on');button.textContent = 'toggle_on'; } else { button.classList.remove('toggle-on'); button.classList.add('toggle-off');button.textContent = 'toggle_off'; } }); }); });
playPauseBtn.addEventListener('click', function () { if (player.getPlayerState() === YT.PlayerState.PLAYING) { player.pauseVideo(); } else { player.playVideo(); } });
muteBtn.addEventListener('click', function () { if (isMuted) { player.unMute();muteBtn.textContent = 'volume_up'; isMuted = false; } else { player.mute();muteBtn.textContent = 'volume_off'; isMuted = true; } });
const previousVideoBtn = document.getElementById('previousVideo');
previousVideoBtn.addEventListener('click', function () { const prevArticleIndex = currentArticleIndex - 1; if (prevArticleIndex >= 0) { currentArticleIndex = prevArticleIndex; currentVideoIndex = 0; player.loadVideoById(articles[prevArticleIndex].videoIds[0]); } else { currentArticleIndex = articles.length - 1; currentVideoIndex = 0; const lastArticleVideos = articles[currentArticleIndex].videoIds; player.loadVideoById(lastArticleVideos[lastArticleVideos.length - 1]); } });
const nextVideoBtn = document.getElementById('nextVideo');
nextVideoBtn.addEventListener('click', function () { const nextArticleIndex = currentArticleIndex + 1; if (nextArticleIndex < articles.length) { currentArticleIndex = nextArticleIndex; currentVideoIndex = 0; player.loadVideoById(articles[nextArticleIndex].videoIds[0]); } else { currentArticleIndex = 0; currentVideoIndex = 0; player.loadVideoById(articles[0].videoIds[0]); } });
var volumeSlider = document.getElementById('volume-slider');
volumeSlider.addEventListener('input', function() { var volumeValue = volumeSlider.value; var volumeLevel = volumeValue / 100; player.setVolume(volumeLevel * 100); });
document.addEventListener('keydown', function(event) { if (event.target.tagName.toLowerCase() === 'input' && event.target.type === 'text') { return; } event.preventDefault(); if (event.key === 'ArrowLeft') { previousVideoBtn.click(); } else if (event.key === 'ArrowRight') { nextVideoBtn.click(); } else if (event.key === ' ') { playPauseBtn.click(); } });
function updateProgressBar() { var currentTime = player.getCurrentTime(); var totalTime = player.getDuration(); if (player.getPlayerState() === YT.PlayerState.PLAYING) { var timeToEnd = totalTime - currentTime; if (timeToEnd <= 2 && isRepeatEnabled) { player.seekTo(0); } } var progressPercentage = (currentTime / totalTime) * 100; var sliderHandle = document.getElementById('slider-handle'); var progressBarContainer = document.getElementById('progress-bar-container'); var progressBarWidth = progressBarContainer.offsetWidth; var handlePosition = (progressPercentage / 100) * progressBarWidth; sliderHandle.style.left = handlePosition + 'px'; var progressBar = document.getElementById('progress-bar'); progressBar.style.width = progressPercentage + '%'; if (player.getPlayerState() === YT.PlayerState.CUED || totalTime === 0) { document.getElementById('video-time').innerHTML = "--:--/--:--"; } else { document.getElementById('video-time').innerHTML = formatTime(currentTime) + "/" + formatTime(totalTime); } }
function formatTime(seconds) { if (isNaN(seconds)) { return '--:--'; } else { var minutes = Math.floor(seconds / 60); var remainingSeconds = Math.floor(seconds % 60); return (minutes < 10 ? '0' : '') + minutes + ':' + (remainingSeconds < 10 ? '0' : '') + remainingSeconds; }}
var sliderHandle = document.getElementById('slider-handle'); var progressBarContainer = document.getElementById('progress-bar-container');
sliderHandle.addEventListener('mousedown', function(event) { var offsetX = event.clientX - sliderHandle.getBoundingClientRect().left; function onMouseMove(moveEvent) { var newPosition = moveEvent.clientX - progressBarContainer.getBoundingClientRect().left - offsetX; var progressBarWidth = progressBarContainer.offsetWidth - sliderHandle.offsetWidth; var percentage = (newPosition / progressBarWidth) * 100; percentage = Math.min(100, Math.max(0, percentage)); sliderHandle.style.left = percentage + '%'; progressBar.style.width = percentage + '%'; var newTime = (percentage / 100) * player.getDuration(); player.seekTo(newTime); } function onMouseUp() { document.removeEventListener('mousemove', onMouseMove); document.removeEventListener('mouseup', onMouseUp); } document.addEventListener('mousemove', onMouseMove); document.addEventListener('mouseup', onMouseUp); });
function shuffle(array) { let currentIndex = array.length, randomIndex; while (currentIndex !== 0) { randomIndex = Math.floor(Math.random() * currentIndex); currentIndex--; [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]]; } return array;}
document.getElementById('randomButton').addEventListener('click', () => { launchRandom(); });
function launchRandom() { const currentIndexBeforeShuffle = currentArticleIndex; articles = shuffle(articles); articles.forEach((article, index) => { const articleElement = document.getElementById(`playButton${article.postId}`); articleElement.style.order = index + 1; }); const newCurrentIndex = articles.findIndex(article => article.id === articles[currentIndexBeforeShuffle].id); currentArticleIndex = newCurrentIndex !== -1 ? newCurrentIndex : 0; currentVideoIndex = 0; player.loadVideoById(articles[currentArticleIndex].videoIds[currentVideoIndex]); }
window.onload = function() { if (window.location.hash) { var targetElement = document.querySelector(window.location.hash); if (targetElement) { var windowHeight = window.innerHeight; var elementTop = targetElement.getBoundingClientRect().top; var offset = elementTop - (windowHeight / 2); window.scrollBy(0, offset); } } };
